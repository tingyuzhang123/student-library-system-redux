{"ast":null,"code":"import _defineProperty from \"/Users/zhangtingyu/booksystem-redux/student-library-system-redux/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/zhangtingyu/booksystem-redux/student-library-system-redux/src/StudentList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport BL from \"./BookLists\";\n\nclass StudentList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showStudentList = event => {\n      this.setState({\n        selectedStudent: event.target.value,\n        isSelected: true\n      });\n    };\n\n    this.createStudentOptions = studentName => {\n      return React.createElement(\"option\", {\n        key: studentName,\n        value: studentName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, studentName);\n    };\n  }\n\n  render() {\n    let _this$state = this.state,\n        isSelected = _this$state.isSelected,\n        isShowedBookList = _this$state.isShowedBookList;\n    const _this$props = this.props,\n          selectedStudent = _this$props.selectedStudent,\n          student = _this$props.student,\n          bookNumbers = _this$props.bookNumbers;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \" Library \"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \" Choose Student \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      onChange: this.showStudentList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, !isSelected && React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Please select:\"), Object.keys(student).map(this.createStudentOptions)), isSelected && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          isShowedBookList: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Borrow Book\"), isShowedBookList && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(BL, {\n      bookNumbers: bookNumbers,\n      selectedStudent: selectedStudent,\n      studentBorrowedBooks: student[selectedStudent],\n      onBookChanged: tempBookSelect => {\n        Object.keys(tempBookSelect).map(bookName => {\n          const bookSelected = tempBookSelect[bookName];\n\n          if (bookSelected) {\n            if (student[selectedStudent][bookName] === undefined) {\n              student[selectedStudent][bookName] = false;\n            }\n\n            student[selectedStudent][bookName] = true;\n            bookNumbers[bookName]--;\n          }\n        });\n        this.setState({\n          student,\n          bookNumbers\n        });\n        return null;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" Borrowed Book: \"), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, Object.keys(student[selectedStudent]).map(bookName => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, student[selectedStudent][bookName] && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, selectedStudent + ' borrowed: ' + bookName, React.createElement(\"button\", {\n        onClick: () => {\n          student[selectedStudent][bookName] = false;\n          bookNumbers[bookName]++;\n          this.setState({\n            student,\n            bookNumbers\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"return\")));\n    })))));\n  }\n\n}\n\nexport default connect(state => _objectSpread({}, state))(StudentList);","map":{"version":3,"sources":["/Users/zhangtingyu/booksystem-redux/student-library-system-redux/src/StudentList.js"],"names":["React","BL","StudentList","Component","constructor","props","showStudentList","event","setState","selectedStudent","target","value","isSelected","createStudentOptions","studentName","render","state","isShowedBookList","student","bookNumbers","Object","keys","map","tempBookSelect","bookName","bookSelected","undefined","connect"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport BL from \"./BookLists\";\n\nclass StudentList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  showStudentList = event => {\n    this.setState({ selectedStudent: event.target.value,isSelected:true });}\n    \n \n  createStudentOptions = (studentName)=> {\n      \n      return <option key={studentName} value={studentName}>{studentName}</option>;\n    };\n \n\n\n  render() {\n    let { isSelected, isShowedBookList} = this.state;\n    const {selectedStudent,student,bookNumbers}=this.props;\n\n    return (\n      <div>\n        <h2> Library </h2>\n        <label> Choose Student </label>\n        <br />\n        <select onChange={this.showStudentList}>\n          {!isSelected&&<option>Please select:</option>}\n          { Object.keys(student).map(this.createStudentOptions)}\n        </select>\n        {isSelected && (\n          <React.Fragment>\n            <button\n              onClick={() => {\n                this.setState({\n                  isShowedBookList: true\n                });\n              }}\n            >\n              Borrow Book\n            </button>\n            {isShowedBookList && (\n              <React.Fragment>\n                <BL\n                  bookNumbers={bookNumbers}\n                  selectedStudent={selectedStudent}\n                  studentBorrowedBooks={student[selectedStudent]}\n                  onBookChanged={tempBookSelect => {\n                    Object.keys(tempBookSelect).map((bookName) => {\n                      const bookSelected = tempBookSelect[bookName];\n                      if (bookSelected) {\n                          if (student[selectedStudent][bookName] === undefined) {\n                              student[selectedStudent][bookName] = false;\n                          }\n                          student[selectedStudent][bookName]=true;\n                          bookNumbers[bookName]--;\n                      }\n                  });\n                  this.setState({\n                      student, bookNumbers\n                  });\n                  return null;\n              }}></BL>\n              \n              </React.Fragment>\n            )}\n            <p> Borrowed Book: </p>\n            {/* {Object.keys(student).map(studentName => { */}\n              {/* const books = student[selectedStudent]; */}\n                {/* return ( */}\n                  <React.Fragment>\n                    <span>\n                      {Object.keys(student[selectedStudent]).map((bookName) => {\n                      return <React.Fragment>\n                        {(student[selectedStudent][bookName])&& <p>{selectedStudent + ' borrowed: ' + bookName}\n                         <button\n                      onClick={() => {\n                        student[selectedStudent][bookName]=false;\n                        bookNumbers[bookName]++;\n                        this.setState({\n                          student, bookNumbers\n                        });\n                      \n                          }\n                        }\n                    >\n                      return\n                    </button>\n                    </p>}\n                  </React.Fragment>\n                      })}\n                      </span>\n                      </React.Fragment>\n     </React.Fragment>\n    )}\n    </div>\n    )}\n            }\nexport default connect((state) => ({\n                ...state//此时的state就是todos:[...]数据\n              }))(StudentList);\n              \n"]},"metadata":{},"sourceType":"module"}